plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.3'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.kyriba.school'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	snippetsDir = file('build/generated-snippets')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	launchScript()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:2.1.0.RELEASE'

	compile('org.hsqldb:hsqldb')
	compile group: 'org.json', name: 'json', version: '20090211'
	compile('io.springfox:springfox-spring-web:2.9.2')
	compile 'io.springfox:springfox-swagger2:2.9.2'
	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.4'
	compile 'ch.qos.logback:logback-classic:1.2.3'


	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.6'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testCompile 'org.springframework.restdocs:spring-restdocs-restassured'
	testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.1.1'
	testCompile 'org.testcontainers:testcontainers:1.11.3'
	testCompile 'org.testcontainers:postgresql:1.11.3'
	testCompile group: 'com.github.database-rider', name: 'rider-core', version: '1.7.2'
	testCompile group: 'com.github.database-rider', name: 'rider-spring', version: '1.7.2'

}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	outputDir "build/asciidoc"
	dependsOn test
	sourceDir 'src/doc/asciidoc'
}

bootJar {
	archiveName 'scheduleservice.jar'
}

docker {
	dependsOn bootJar
	name "msschooltraining/schedule-service"
	tags version, 'latest'
	files bootJar.archiveFile
}
