plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.3"
    id 'com.bmuschko.docker-spring-boot-application' version '4.10.0'
    id "org.liquibase.gradle" version "2.0.1"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.kyriba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    snippets = file('build/generated-snippets')
}

test {
    outputs.dir snippets
    useJUnitPlatform()
}

asciidoctor {
    attributes 'snippets': snippets
    inputs.dir snippets
    outputDir "build/asciidoc"
    dependsOn test
    sourceDir 'src/doc/asciidoc'
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

bootRun {
    args += "--spring.datasource.url=$datasource_url"
    args += "--spring.datasource.username=$datasource_username"
    args += "--spring.datasource.password=$datasource_password"
    args += "--spring.datasource.driver-class-name=$datasource_driver"
}


docker {
    registryCredentials {
        url = 'https://index.docker.io/v1/'
        username = docker_username
        password = docker_password
        email = docker_email
    }

    springBootApplication {
        baseImage = 'openjdk:11'
        ports = [8080]
        tag = "$docker_username/curriculum-service:$version"
    }
}

liquibase {
    activities {
        main {
            changeLogFile "${project.rootDir}/src/main/resources/changelog.json"
            url datasource_url
            username datasource_username
            password datasource_password
            driver datasource_driver
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework:spring-aspects'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-bean-validators:2.9.2'
    implementation 'org.hibernate.validator:hibernate-validator'

    implementation 'org.liquibase:liquibase-core:3.6.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    //implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.1.1.RELEASE'
    
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql:42.2.5'

    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.3'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.0.1'
    liquibaseRuntime 'org.postgresql:postgresql:42.2.5'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'
    
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.4.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.4.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.2"
    testImplementation "org.junit.platform:junit-platform-commons:1.4.0"
    testImplementation "org.junit.platform:junit-platform-launcher:1.4.0"

    testImplementation "org.mockito:mockito-core:2.28.2"
    testImplementation "org.mockito:mockito-junit-jupiter:2.28.2"
    testImplementation  "io.rest-assured:spring-mock-mvc:3.3.0"
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.3.RELEASE'

    testImplementation 'org.testcontainers:postgresql:1.11.4'
    testImplementation "org.testcontainers:junit-jupiter:1.11.4"
    
    testImplementation ('org.springframework.restdocs:spring-restdocs-restassured') {
        exclude group: 'junit'
    }
    testImplementation ('org.springframework.restdocs:spring-restdocs-asciidoctor') {
        exclude group: 'junit'
    }
}
